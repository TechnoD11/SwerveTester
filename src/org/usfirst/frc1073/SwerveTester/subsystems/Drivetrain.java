// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.SwerveTester.subsystems;

import org.usfirst.frc1073.SwerveTester.RobotMap;
import org.usfirst.frc1073.SwerveTester.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Drivetrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController frontLefDir = RobotMap.drivetrainfrontLefDir;
    SpeedController frontLeftSpeed = RobotMap.drivetrainfrontLeftSpeed;
    SpeedController frontRightDir = RobotMap.drivetrainfrontRightDir;
    SpeedController frontRightSpeed = RobotMap.drivetrainfrontRightSpeed;
    SpeedController backLeftDir = RobotMap.drivetrainbackLeftDir;
    SpeedController backLeftSpeed = RobotMap.drivetrainbackLeftSpeed;
    SpeedController backRightDir = RobotMap.drivetrainbackRightDir;
    SpeedController backRightSpeed = RobotMap.drivetrainbackRightSpeed;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private double dirChanger;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new Drive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        dirChanger = 0;
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void stopAll(){
    	frontLefDir.set(0);
    	frontLeftSpeed.set(0);
    	frontRightDir.set(0);
    	frontRightSpeed.set(0);
    	backLeftDir.set(0);
    	backLeftSpeed.set(0);
    	backRightDir.set(0);
    	backRightSpeed.set(0);
    }
    public void driveFrontLeftDir(double speed){
    	frontLefDir.set(speed);
    }
    public void driveFrontLeftSpeed(double speed){
    	frontLeftSpeed.set(speed);
    }
    public void driveFrontRightDir(double speed){
    	frontRightDir.set(speed);
    }
    public void driveFrontRightSpeed(double speed){
    	frontRightSpeed.set(speed);
    }
    public void driveBackLeftDir(double speed){
    	backLeftDir.set(speed);
    }
    public void driveBackLeftSpeed(double speed){
    	backLeftSpeed.set(speed);
    }
    public void driveBackRightDir(double speed){
    	backRightDir.set(speed);
    }
    public void driveBackRightSpeed(double speed){
    	backRightSpeed.set(speed);
    }
    public void changeDir(){
    	if(dirChanger == 5){
    		dirChanger = 0;
    	}
    	else{
    		dirChanger++;
    	}
    	
    }
    public double getDir(){
    	return dirChanger;
    }
}

